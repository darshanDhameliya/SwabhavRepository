package com.techlab.analyze;

import java.util.ArrayList;
import java.util.HashMap;

import com.techlab.employee.Employee;

public class Analyze {
	private ArrayList<Employee> employees;
	private Employee maxSalEmployee;

	public Analyze(ArrayList<Employee> employees) {
		this.employees = employees;
	}

	public Employee maximumSalaryEmployee() {
		for (Employee employee : employees) {
			if (checkValue(maxSalEmployee)) {
				maxSalEmployee = employee;
				continue;
			}
			if (maxSalEmployee.getSalary() < employee.getSalary()) {
				maxSalEmployee = employee;
			}
		}
		return maxSalEmployee;
	}
	public boolean checkValue(Employee employee)
	{
		if (employee.equals(null))
			return false;
		return true;
	}

	public HashMap<String, Integer> totalEmployeeDesignationWise() {
		HashMap<String, Integer> count = new HashMap<String, Integer>();
		int increment;
		for (Employee employee : employees) {
			if (count.containsKey(employee.getDesignation())) {
				increment = 0;
				increment = (int) count.get(employee.getDesignation()) + 1;
				count.put(employee.getDesignation(), increment);
				continue;
			}
			count.put(employee.getDesignation(), 1);

		}
		return count;
	}

	public HashMap<Integer, Integer> totalEmployeeDepartmentWise() {
		HashMap<Integer, Integer> count = new HashMap<Integer, Integer>();
		int increment;
		for (Employee employee : employees) {
			if (count.containsKey(employee.getDepartment())) {
				increment = 0;
				increment = (int) count.get(employee.getDepartment()) + 1;
				count.put(employee.getDepartment(), increment);
				continue;
			}
			count.put(employee.getDepartment(), 1);

		}
		return count;
	}

	public ArrayList<Employee> getEmployees() {
		return employees;
	}
}
