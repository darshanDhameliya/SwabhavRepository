package com.techlab.analyze;

import java.util.ArrayList;
import java.util.HashMap;

import com.techlab.employee.Employee;

public class Analyze {
	private ArrayList<Employee> employees;
	private Employee maxSalEmployee;

	public Analyze(ArrayList<Employee> employees) {
		this.employees = employees;
	}

	public Employee maximumSalaryEmployee() {
		for (Employee employee : employees) {

			if (checkNullValue(maxSalEmployee))
				maxSalEmployee = employee;

			if (maxSalEmployee.getSalary() < employee.getSalary())
				maxSalEmployee = employee;
		}
		return maxSalEmployee;
	}

	public boolean checkNullValue(Employee employee) {
		if (employee == null)
			return true;
		return false;
	}

	public HashMap<String, Integer> totalEmployeeDesignationWise() {
		HashMap<String, Integer> count = new HashMap<String, Integer>();

		for (Employee employee : employees) {
			if (count.containsKey(employee.getDesignation())) {

				count.put(employee.getDesignation(), incrementCount((int) count.get(employee.getDesignation())));
				continue;
			}
			count.put(employee.getDesignation(), 1);

		}
		return count;
	}

	public HashMap<Integer, Integer> totalEmployeeDepartmentWise() {
		
		HashMap<Integer, Integer> count = new HashMap<Integer, Integer>();
		for (Employee employee : employees) {
			int employeeDepartment=employee.getDepartment();
			
			if (count.containsKey(employeeDepartment)) {
				count.put(employeeDepartment, incrementCount((int) count.get(employeeDepartment)));
				continue;
			}
			count.put(employee.getDepartment(), 1);
		}
		return count;
	}

	public int incrementCount(int count) {
		return count + 1;
	}

	public ArrayList<Employee> getEmployees() {
		return employees;
	}
}
