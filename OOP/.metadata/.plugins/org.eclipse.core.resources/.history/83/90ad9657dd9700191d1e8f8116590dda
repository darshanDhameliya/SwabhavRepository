package com.techlab.result.analyze;

import static org.junit.Assert.*;

import org.junit.Test;

import com.techlab.board.Board;
import com.techlab.board.Cell;
import com.techlab.board.Mark;

public class ResultAnalyzeTest {

	@Test
	public void testGenrateAndGetResultState_BoardAllCellInPutTheMark_ResultGetResultMatchWinOrDrawOrInprogress() {

		Board board = new Board();
		board.setBoardCellMark(0, Mark.O);
		board.setBoardCellMark(1, Mark.O);
		board.setBoardCellMark(2, Mark.O);
		board.setBoardCellMark(3, Mark.X);
		board.setBoardCellMark(4, Mark.X);
		board.setBoardCellMark(5, Mark.O);
		board.setBoardCellMark(6, Mark.O);
		board.setBoardCellMark(7, Mark.X);
		board.setBoardCellMark(8, Mark.X);
		ResultAnalyze resultAnalyze = new ResultAnalyze(board);
		resultAnalyze.genrateResultState();

		String actual = resultAnalyze.getResultState().toString();
		String expected = "Win";
		assertEquals(expected, actual);

	}

	@Test
	public void testGetWiningPlayerSign_BoardAllCellInPutTheMark_ResultGetResultWiningPlayerSignO() {

		Board board = new Board();
		board.setBoardCellMark(0, Mark.O);
		board.setBoardCellMark(1, Mark.O);
		board.setBoardCellMark(2, Mark.O);
		board.setBoardCellMark(3, Mark.X);
		board.setBoardCellMark(4, Mark.X);
		board.setBoardCellMark(5, Mark.O);
		board.setBoardCellMark(6, Mark.O);
		board.setBoardCellMark(7, Mark.X);
		board.setBoardCellMark(8, Mark.X);
		ResultAnalyze resultAnalyze = new ResultAnalyze(board);

		resultAnalyze.genrateResultState();
		String actual = resultAnalyze.getWiningPlayerSign();
		String expected = "O";

		assertEquals(expected, actual);
	}

}
